!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__error",errorClass:"modal__input_state_error"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.errorClass)},r=(e,t,r)=>{(e=>e.some(e=>!e.validity.valid))(e)?n(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},n=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.disabled=!0},o=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(e=>e.ok?e.json():Promise.reject(`Error ${e.status}`))}editUserInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(e=>e.ok?e.json():Promise.reject(`Error ${e.status}`))}editAvatarPicture(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then(e=>e.ok?e.json():Promise.reject(`Error ${e.status}`))}addUserCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}deleteUserCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"2ff931b6-b90a-4804-a7ca-5d064113fca0","Content-Type":"application/json"}}),a=document.querySelector(".profile__edit-btn"),s=document.querySelector("#edit-profile-modal"),c=s.querySelector(".modal__close-btn"),i=s.querySelector(".modal__form"),l=s.querySelector("#profile-name-input"),d=s.querySelector("#profile-description-input"),u=s.querySelector(".modal__submit-btn");a.addEventListener("click",function(){l.value=N.textContent,d.value=O.textContent,((e,r,n)=>{r.forEach(r=>{t(e,r,n)})})(s,[l,d],e),M(s)}),c.addEventListener("click",function(){F(s)}),i.addEventListener("submit",function(e){e.preventDefault(),u.textContent="Saving...",o.editUserInfo({name:l.value,about:d.value}).then(e=>{N.textContent=e.name,O.textContent=e.about,F(s)}).catch(console.error).finally(()=>{u.textContent="Save"})});const m=document.querySelector(".profile__avatar-btn"),_=document.querySelector("#edit-avatar-modal"),h=document.querySelector(".profile__avatar"),f=_.querySelector(".modal__close-btn"),v=_.querySelector(".modal__form"),y=_.querySelector("#profile-avatar-input"),S=_.querySelector(".modal__submit-btn");m.addEventListener("click",function(){M(_)}),f.addEventListener("click",function(){F(_)}),v.addEventListener("submit",function(e){e.preventDefault(),S.textContent="Saving...",o.editAvatarPicture({avatar:y.value}).then(e=>{h.src=e.avatar,F(_),v.reset()}).catch(console.error).finally(()=>{S.textContent="Save"})});const b=document.querySelector(".profile__add-btn"),p=document.querySelector("#new-post-modal"),q=p.querySelector(".modal__close-btn"),E=p.querySelector(".modal__form"),k=p.querySelector("#card-image-input"),C=p.querySelector("#card-caption-input"),L=p.querySelector(".modal__submit-btn");b.addEventListener("click",function(){M(p)}),q.addEventListener("click",function(){F(p)}),E.addEventListener("submit",function(t){t.preventDefault(),L.textContent="Saving...",o.addUserCard({name:C.value,link:k.value}).then(r=>{const o=B(r);T.prepend(o),F(p),E.reset(),n(t.submitter,e)}).catch(console.error).finally(()=>{L.textContent="Save"})});const $=document.querySelector("#delete-picture-modal"),U=$.querySelector(".modal__delete-close-btn"),g=$.querySelector(".modal__delete-btn"),x=$.querySelector(".modal__cancel-btn");function j(e,t){g.textContent="Deleting...",o.deleteUserCard(H).then(()=>{J.remove(),F($)}).catch(console.error).finally(()=>{g.textContent="Delete"})}$.addEventListener("submit",j),g.addEventListener("click",function(){j()}),U.addEventListener("click",function(){F($)}),x.addEventListener("click",function(){F($)});const P=document.querySelector("#preview-post-modal"),A=P.querySelector(".modal__image"),I=P.querySelector(".modal__close_type_preview"),w=P.querySelector(".modal__preview-title");I.addEventListener("click",function(){F(P)});const D=document.querySelector("#card-template").content.querySelector(".card"),T=document.querySelector(".cards__list");function B(e){const t=D.cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),a=t.querySelector(".card__like-btn"),s=t.querySelector(".card__delete-btn");return a.addEventListener("click",function(){!function(e,t){e.classList.contains("card__like-btn-active")?o.removeLike(t).then(()=>{e.classList.remove("card__like-btn-active")}):o.likeCard(t).then(()=>{e.classList.add("card__like-btn-active")}).catch(console.error)}(a,e._id)}),s.addEventListener("click",function(){J=t,H=e._id,M($)}),n.addEventListener("click",function(){A.src=e.link,A.alt=e.name,w.textContent=e.name,M(P)}),n.src=e.link,n.alt=e.name,r.textContent=e.name,t}const N=document.querySelector(".profile__name"),O=document.querySelector(".profile__description");let J,H;function z(e){"Escape"===e.key&&F(document.querySelector(".modal_is-opened"))}function M(e){e.classList.add("modal_is-opened"),document.addEventListener("keydown",z)}function F(e){e.classList.remove("modal_is-opened"),document.removeEventListener("keydown",z)}document.querySelectorAll(".modal").forEach(e=>{e.addEventListener("click",t=>{t.target===e&&F(e)})}),(e=>{document.querySelectorAll(e.formSelector).forEach(n=>{((e,n)=>{const o=Array.from(e.querySelectorAll(n.inputSelector)),a=e.querySelector(n.submitButtonSelector);r(o,a,n),o.forEach(s=>{s.addEventListener("input",function(){((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{e.querySelector(`#${t.id}-error`).textContent=r,t.classList.add(n.errorClass)})(e,r,r.validationMessage,n)})(e,s,n),r(o,a,n)})})})(n,e)})})(e),o.getAppInfo().then(([e,t])=>{e.forEach(function(e){const t=B(e);T.append(t)}),N.textContent=t.name,O.textContent=t.about,h.src=t.avatar}).catch(console.error)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,